const axios = require('axios');
const sendMessage = require('../handles/sendMessage');

const pinterestCommand = async (senderId, userText) => {
    const prompt = userText.slice(10).trim(); // Enlever 'pinterest ' et enlever les espaces vides

    // V√©rifier si le prompt est vide
    if (!prompt) {
        sendMessage(senderId, 'Veuillez fournir une question ou un sujet pour que je puisse vous aider.'); // Message par d√©faut
        return; // Sortir de la fonction si le prompt est vide
    }

    // Pause de 2 secondes avant de faire l'appel API
    await new Promise(resolve => setTimeout(resolve, 2000));

    // Message pour indiquer que la recherche est en cours
    sendMessage(senderId, 'üîÑ Recherche en cours, un instant...');

    try {
        // Appel √† l'API Pinterest
        const response = await axios.get(`https://deku-rest-api.gleeze.com/api/pinterest?q=${encodeURIComponent(prompt)}`);
        console.log(response.data); // V√©rifiez la structure des donn√©es

        // V√©rifiez si la r√©ponse contient des r√©sultats
        if (response.data.status !== 200 || !response.data.result || response.data.result.length === 0) {
            sendMessage(senderId, 'üòï D√©sol√©, je n\'ai trouv√© aucun r√©sultat.');
            return;
        }

        // R√©cup√©rer jusqu'√† 5 images
        const imgData = response.data.result.slice(0, 5); // Limiter √† 5 images

        // Attendre encore 2 secondes avant d'envoyer les r√©sultats
        await new Promise(resolve => setTimeout(resolve, 2000));

        // Construire le message √† envoyer avec les images
        const imagesToSend = imgData.map(url => {
            return { url }; // Formate chaque URL dans un objet
        });

        // Envoyer les images √† l'utilisateur
        sendMessage(senderId, {
            attachment: imagesToSend, // Assurez-vous que cela correspond √† la m√©thode d'envoi des images
            body: `Voici les r√©sultats pour "${prompt}":`
        });
    } catch (error) {
        console.error('Error calling the Pinterest API:', error);
        sendMessage(senderId, 'D√©sol√©, une erreur s\'est produite lors du traitement de votre question.');
    }
};

module.exports = pinterestCommand;
